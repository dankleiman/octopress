<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dan Kleiman]]></title>
  <link href="http://dankleiman.github.io/atom.xml" rel="self"/>
  <link href="http://dankleiman.github.io/"/>
  <updated>2014-05-30T11:32:56-04:00</updated>
  <id>http://dankleiman.github.io/</id>
  <author>
    <name><![CDATA[Dan Kleiman]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Buying a Mongolian Website for My URL Shortner]]></title>
    <link href="http://dankleiman.github.io/blog/2014/05/30/buying-a-mongolian-website/"/>
    <updated>2014-05-30T09:17:22-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/05/30/buying-a-mongolian-website</id>
    <content type="html"><![CDATA[<p>Ok, so technically I just purchased a Mongolian domain name: <a href="http://klei.mn">klei.mn</a>.</p>

<p>Why, you might be wondering?</p>

<!-- more -->


<p>This week at Launch Academy we&rsquo;ve been building Sinatra applications with simple databases (Redis and Postgres) and deploying them to Heroku.</p>

<p>One of the extra-credit projects was to build a url shortner and I thought it would be cool to hook mine up to a customized domain, kind of like a vanity plate for your car.</p>

<p>In this post, I&rsquo;m going to explain why you might want a URL shortner and how I built and deployed my own custom version.</p>

<h2>The Basic Logic of a URL Shortner</h2>

<p>Sometimes, when you&rsquo;re sharing the url of a website, the address can be really, really long.</p>

<p>This is problematic if you&rsquo;re trying to dictate the url to someone, have to write it out by hand for some reason, or if you want to share it somewhere with space constraints, like on Twitter.</p>

<p>The idea behind a url shortner is that you can generate a shorter url whose sole purpose is to redirect to the longer url. Now, you can use a much shorter, more manageable set of characters to describe the same page.</p>

<p>Often, the domain of the url itself is only a few characters long, further truncating the &ldquo;short url&rdquo; &mdash; examples include Twitters own service, t.co, or a free service anyone can access like bit.ly.</p>

<p>Many sites like the New York Times have created prorietary domains just to shorten their own links, which is a combination of branding when the short domain resembles the name of the company or main site and a tracking tool, which I&rsquo;ll explain more further down this post.</p>

<h2>My Mongolian Domain Name</h2>

<p>So, when I said this was a bit of a vanity project for me, what I meant was, I took my last name &ldquo;Kleiman&rdquo; and tried to think of a way to shrink it down to fit a small domain name.</p>

<p>Using something like &ldquo;DansShortUrlforShorteningLongUrls.com&rdquo; would totally defeat the purpose, right?</p>

<p>I had seen the &ldquo;.mn&rdquo; Top Level Domain (TLD &ndash; that&rsquo;s the extension on any url, like .com), so I poked around a little to see about purchasing one.</p>

<p>It turns out that the more obscure TLDs aren&rsquo;t for sale on all of the popular domain resellers, but after a little digging, I did <a href="http://domain.mn">find a site</a> that sells .mn domains &mdash; and it turns out that the country that owns that TLD is Mongolia.</p>

<p>Nothing like starting your morning off with a little international commerce!</p>

<h2>The Final Step: Deploying the App</h2>

<p>So, last thing first, then we&rsquo;ll talk about the code.</p>

<p>When you deploy an application to <a href="http://heroku.com">Heroku</a>, they host your code on a server and set you up with a subdomain.</p>

<p>Their subdomains are pretty elegantly named. They always conjure dark, quiet, rustic imagery, like &ldquo;sleepy-journey&rdquo; or &ldquo;damp-retreat&rdquo;.</p>

<p>Again, though, the problem is that &ldquo;stormy-stream-3295.herokuapp.com&rdquo; doesn&rsquo;t really lend itself to a short url.</p>

<p>I saved this for the final step, but after the app (ok, version 1) was up and running, I went through the process of redirecting the Heroku default domain to my newly acquired, shorter Mongolian domain name, klei.mn.</p>

<p>Just want to give a shoutout here to <a href="http://dnsimple.com">DNSimple</a> for making the redirect process really painless. Initially, I tried to mess around with the records that tell any requests from the browser where to go for the page you want on the site where I bought the domain name. It was a mess.</p>

<p>Fortunately, DNSimple has an easy process for redirecting and within minutes, the app was running from Heroku on klei.mn. Really Simple!</p>

<p>The only other hiccup I encountered in deployment was that the free Redis database I was using kept timing out with the number of requests the app was making, even for some simple testing. Since we had moved on to Postgres in class, I rewrote the app to use that instead. As it turns out, the data structure in Postgres was much easier to use anyway, even if it was probably overkill, with a single table in this case.</p>

<p>I hope to come back to the differences in working with these two databases, but that&rsquo;s for another time and post.</p>

<h2>Building the URL Shortner in Sinatra</h2>

<p>At Launch Academy, we&rsquo;ve been following a really neat learning progression, where we&rsquo;re building up gradually to the complexity of a full stack web application, specifially built with Ruby on Rails.</p>

<p>While we&rsquo;ve been working on our Ruby fundamentals all along, there are at least three other areas that can be broken down into simpler steps:</p>

<ul>
<li>The Framework that integrates what the user sees with the information stored in the database.</li>
<li>The Database, in terms of its organization and how the application interacts with data.</li>
<li>The Front-End interaction for the user.</li>
</ul>


<p>For this project, I&rsquo;m going to explain where we&rsquo;re at mainly regarding the framework.</p>

<p>We started out with the simplest way to run a Ruby program, executing a Ruby file from the command line.</p>

<p>When we were just learning Ruby, this was fine. We didn&rsquo;t have a lots of data and the programs were simple enough that all of the logic could easily fit in one file. Plus, the interface was bare bones, just the simple, elegant command line (I&rsquo;ll probably write more about falling in love the command line later, ha!).</p>

<p>And even when we wanted to use more complex data, we learned how to read and write with local files or even pull in data from APIs.</p>

<p>To persist information and access it more dynamically, though, we quickly ran up against the limits of our CSV files and started to need to query databases.</p>

<p>Interacting with a database leads to moving dynamic information around between all your different files, selectively displaying it to you user.</p>

<p>To control the data this way, you need an extra layer, between the user and the database, essentially to direct all this traffic and figure out what to do next. Enter, &ldquo;the framework.&rdquo; In this case, we started out with a simple one (I&rsquo;m told) called Sinatra.</p>

<p>In production, your Sinatra app likely includes the following files:</p>

<ul>
<li>A file to tell the server how to being your program.</li>
<li>A &ldquo;server&rdquo; file that the program runs from, directing traffic, executing program logic, and interacting with the database.</li>
<li>&ldquo;Views&rdquo; that dictate what gets displayed on each page the application serves up.</li>
<li>In Ruby, &ldquo;Gemfiles&rdquo; that tell the server what Ruby Gems will be needed to perform specific tasks in the application.</li>
</ul>


<p>From what I understand, compared to a more robust framework like Rails, Sinatra&rsquo;s simplicity lies in the way all of your routes (links between the data and the views) live in a single file.</p>

<p>At least for us, at this stage, it made sorting out all the program logic easier, since you only have to look in one place. One the flip side, I can see how this gets messy as you go up in complexity, but that&rsquo;s what&rsquo;s cool about our curriculum: when increased complexity/difficult necessitates new tools to handle the issue, we are introduced to them, <em>but not before</em>.</p>

<h2>And Now for Some Code</h2>

<p>There are two operations at the heart of this project: <strong>creating short urls and redirection</strong>.</p>

<p>I want to turn the long url that you give me into a short one AND every time you visit the short one, I want to send you to the long one.</p>

<p>Along the way, if I can <a href="http://klei.mn/stats">track how often this is happening for each short url</a>, that will be cool too.</p>

<p>When you visit <a href="http://klei.mn">klei.mn</a>, hopefully, the action is clear: give me a url to shorten.</p>

<p>Here&rsquo;s what the shortening code looks like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>post '/new' do
</span><span class='line'>  url = params[:url]
</span><span class='line'>  @errors = []
</span><span class='line'>  @errors = valid_url(url)
</span><span class='line'>  if @errors.empty?
</span><span class='line'>    long_url = check_long_url(url).to_a
</span><span class='line'>    if long_url.empty?
</span><span class='line'>      short_url = get_short(url)
</span><span class='line'>      save_link(url, short_url)
</span><span class='line'>    else
</span><span class='line'>      short_url = long_url[0]["short_url"]
</span><span class='line'>    end
</span><span class='line'>    redirect "/links/#{short_url}"
</span><span class='line'>  else
</span><span class='line'>    erb :index
</span><span class='line'>  end
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s what it does:</p>

<ul>
<li>Once you hit &ldquo;Shorten&rdquo; on the main page, you send the server the &ldquo;post&rdquo; request.</li>
<li>First, I&rsquo;m going to make sure what you put in the form is a valid url.</li>
<li>Then, I want to check and make sure that the url you sent me isn&rsquo;t already in the database.</li>
<li>If it is, I will send you to the page that already exists for that link: klei.mn/links/(some short url), that shows the full url, the short url, and click stats.</li>
<li>If it&rsquo;s not in the database, I create a new short url for it and insert that new info into the database with the &ldquo;save_link&rdquo; method.</li>
</ul>


<p>Check out the stats page for <a href="http://klei.mn">all shortened urls</a>.</p>

<p>You&rsquo;ll notice that <a href="https://twitter.com/heroiceric">one clever person</a> I asked to test the site started by shortnening the main domain, then kept entering the returned short urls into the shortner. Now, every time you use the last link, it redirects you to the main page, <em>via all the other shortened urls and all their click stats go up</em>. (I&rsquo;ll likely disable the ability to submit urls with klei.mn as the domain by the time you read this.)</p>

<p>Now that you&rsquo;ve created or retreived a short url for your long link, you&rsquo;ll want to use it.</p>

<p>Here&rsquo;s what happens when you enter one of the short urls:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>get '/:short_url' do
</span><span class='line'>  short_url = params[:short_url]
</span><span class='line'>  if short_url == 'stats'
</span><span class='line'>    @url_stats = get_all_url_stats
</span><span class='line'>    erb :'stats'
</span><span class='line'>  elsif short_url == 'about'
</span><span class='line'>    erb :'about'
</span><span class='line'>  else
</span><span class='line'>    add_clicks(short_url)
</span><span class='line'>    outgoing_link_data = get_long_url(short_url)
</span><span class='line'>    outgoing_link = outgoing_link_data[0]["long_url"]
</span><span class='line'>    redirect "#{outgoing_link}"
</span><span class='line'>  end
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure>


<p>Here&rsquo;s what&rsquo;s going on in the code:</p>

<ul>
<li>First, I grab the slug, or the part of the url after &ldquo;klei.mn/&rdquo;, from the &ldquo;get&rdquo; request.</li>
<li>Since all the short urls are klei.mn/something, there have to be a few exceptions for any other page I want to have on the site, like &ldquo;klei.mn/stats&rdquo; or &ldquo;klei.mn/about&rdquo;. <em>Maybe there&rsquo;s another way to do this?</em></li>
<li>Once I&rsquo;ve determined that it&rsquo;s one of the short urls, I want to send you to the url you&rsquo;re actually looking for. But first, I want to increase the click count for that url. The first method, &ldquo;add_clicks&rdquo;, adds a click to the counter for that url. Yay, semantic naming conventions!</li>
<li>Next, we need to go get the corresponding long url from the database, so we know where to send you.</li>
<li>Finally, we redirect to the long url.</li>
</ul>


<p>Before I really knew how servers sent and received information, this whole redirecttion process seemed like a little bit of magic.</p>

<p>Writing this up, now, though, it all feels pretty straightforward, don&rsquo;t you think?</p>

<p>You ask me to go somewhere. I look up directions and send you on your way to the destination you actually want. Maybe this is a version of &ldquo;give them what they want in the hope that they&rsquo;ll want what they need?&rdquo;</p>

<p>Which leads me to a more dilemma about shortening urls&hellip;.is it really what we want to be doing?</p>

<h2>The Problem with URL Shortnening</h2>

<p>I mentioned this project to a former board member of the [Web Foundation](<a href="http://webfoundation.org,">http://webfoundation.org,</a> whose mission is to &ldquo;establish the open Web as a global public good and a basic right, ensuring that everyone can access and use it freely.&rdquo; and he said &ldquo;you know that&rsquo;s not a good idea, right?&rdquo;</p>

<p>It&rsquo;s not that he&rsquo;s against me learning to code. He&rsquo;s been very supportive. ;&ndash;)</p>

<p>But what he and his colleagues do is think about the world wide web on a much longer time scale that most people typically do.</p>

<p>Our use case for the short url is really about convenience. They think about persistence, connectivity, and meaning.</p>

<p>By inserting short urls all over the place to direct connections around the web, we are potentially creating a lot of dead-ends if the short url domains go away.</p>

<p>From what I gathered from him, there is also a semantic isssue, when you compare short urls and their longer parents.</p>

<p>The short links posted everywhere won&rsquo;t really mean anything, compared to the more detailed long urls they are derived from.</p>

<p>Wikipedia has more on the shortcomings of URL shortnening <a href="http://en.wikipedia.org/wiki/URL_shortening#Shortcomings">here</a>.</p>

<p>Can you make the case either way? Does it make sense in a more closed ecosystem like Twitter? Am I being an irresponsible citizen of the net by introducing short urls for vanity and convenience?</p>

<p>These all seem like interesting questions!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a Learning Tool for Compound Data Structures]]></title>
    <link href="http://dankleiman.github.io/blog/2014/05/25/building-a-learning-tool-for-compound-data-structures/"/>
    <updated>2014-05-25T09:07:15-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/05/25/building-a-learning-tool-for-compound-data-structures</id>
    <content type="html"><![CDATA[<p>One of the most challenging things about learning to work with compound data structures has been reading the nested hashes and arrays and extracting the right set of brackets to use to identify a particular value in your code.</p>

<!-- more -->


<p>For example:
<code></p>

<pre><code>movie = {
  title: 'The Nutty Professor',
  cast: [
    {
      name: 'Eddie Murphy',
      characters: [
        'Sherman Klump',
        'Buddy Love',
        'Lance Perkins',
        'Papa Klump',
        'Mama Klump',
        'Grandma Klump',
        'Ernie Klump'
      ]
    },
    {
      name: 'Jada Pinkett Smith',
      characters: [
        'Carla Purty'
      ]
    }
  ]
}
</code></pre>

<p></code></p>

<p>If I want to find a character, I have to reference an array inside a hash inside an array inside a hash&hellip;I think. Even that last sentence was difficult to write.</p>

<p>So I started thinking&hellip;there must be a programmatic way to express finding the reference for any element of the compound data structure.</p>

<h2>Decompose the Problem</h2>

<p>Here&rsquo;s the problem statement:  <strong>Given a value and a compound data structure, return the position of the value in the strucure, formatted so you can referrence it in your code.</strong></p>

<p>The first thing you realize is that searching through a hash and array will work slightly differently. On the advice of my instructors, I separated out these cases and got to work on the smallest case first.</p>

<p>Breaking it down into steps looked something like this:</p>

<ol>
<li>Solve just the array case first.</li>
<li>Start with the smallest possible array.</li>
<li>Add layers of nesting and make sure it still works.</li>
<li>Then, modify the searching for hashes.</li>
<li>Combine.</li>
</ol>


<p>Most of the work happened in step 3, where we run into the problem of tracking the correct path to our value through recursive calls to the search method.</p>

<p>Struggling through the recursion in this problem, I started to wonder if I had traded one problem, learning to read compound data structures, for another: <em>figuring out recursive searching!</em></p>

<h2>Working through Search Recursively</h2>

<p>Check out the suggested search for &ldquo;recursion&rdquo; when you Google it:</p>

<p><a><img src="http://i.imgur.com/3rKK7mF.png" title="Hosted by imgur.com" /></a></p>

<p>Ha! Yeah, I clicked on &ldquo;Did you mean? recursion&rdquo; a few times just to check.</p>

<p>Anyway, since we don&rsquo;t know how big the data structure is, we have to keep searching through unknown elements, that could be value, hashes, or arrays that need to be looked through in turn as well.</p>

<p>This is a job for recursion!</p>

<p>Looking at <a href="http://en.wikipedia.org/wiki/Inorder_traversal#Depth-first">tree traversal search problems</a>, I realized I needed to move through a tree structure and needed to track where I was on the tree…but couldn&rsquo;t figure out at first how to track the path.</p>

<p>The first pass at the problem returned an array of every endpoint of every possible path. Each element of the returned &ldquo;path&rdquo; array came back as true or false relative to the value we were searching for…but there were no breadcrumbs to know what the path was for the true version. <em>To solve the problem, we needed to return a path, not just know that the value was in the data structure</em></p>

<p>To identify the path, we capturing the index of the current element we were testing in the array. We&rsquo;d add them once we new we had a true path on the way &ldquo;back up&rdquo; the recursion. This was messing with the order, though.</p>

<p>Finally, (in the shower, of course!) I realized that adding to the path should happen just before the recursive call AND if the call came back &ldquo;false&rdquo;, we should strip out the path identifier right after the call came back.</p>

<p>Adding to the path:
<code></p>

<pre><code>if !path.include?(true)
  path &lt;&lt; i
end
</code></pre>

<p></code>
Removing the &ldquo;wrong branch&rdquo; from the path after the recursive call:
<code></p>

<pre><code>path = path_finder(value, element, path)
if !path.include?(true)
  path.pop
end
</code></pre>

<p></code></p>

<p>In other words, a &ldquo;not-true&rdquo; return would tell us that we went down the wrong branch and so we should erase that branch and start going down the next possible branch.</p>

<p>After I got the correct path to return, it was just a matter of cleaning it up and presenting it in a way that would let you &ldquo;copy and paste&rdquo; into your code for easy referrence.</p>

<p>I hope this comes in handy when other people are learning to read compound data structures!</p>

<p><a href="https://github.com/dankleiman/path_finder">Check out the repo on Github</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Day 10: The Dreams Continue]]></title>
    <link href="http://dankleiman.github.io/blog/2014/05/21/day-10-the-dreams-continue/"/>
    <updated>2014-05-21T08:02:38-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/05/21/day-10-the-dreams-continue</id>
    <content type="html"><![CDATA[<p>It happened again.</p>

<p>At 5:00am this morning I woke myself up&hellip;.talking through a solution to a coding problem I had at the end of the day yesterday.</p>

<p>I was literally coding in my sleep.</p>

<p>Remember the <a href="http://dankleiman.github.io/blog/2014/05/17/launch-academy-week-1-reflections/">Tetris Effect</a>? It&rsquo;s in full effect.</p>

<p>But I&rsquo;ve seen this before and once I got over the shock of writing code in my sleep, I got pretty excited. It means some serious learning is going on.</p>

<!-- more -->


<h2>Intensive Learning and Brain Cycles</h2>

<p>In 2004, I attended my first qigong (pronounce &ldquo;chee-gung,&rdquo; it&rsquo;s the Chinese practice of developing your natural internal energy. You can read more about my background in this practice <a href="http://dankleiman.com">here</a>) instructor training.</p>

<p>We trained 8-10 hours a day and we were about 10 days in before we got a day off.</p>

<p>It was July in Northern California and we decided to escape the heat by going to see a movie.</p>

<p>I rememember sitting in the theatre and looking down at my hands. They were pulsing in and out, getting bigger and smaller&hellip;.and I wasn&rsquo;t doing anything.</p>

<p>I should tell you that the main practice we were working on, called &ldquo;Opening and Closing&rdquo; involves manipulating the synovial fluids of the joints and the ligaments so that the joint spaces shrink and expand in a rhythm&hellip;but we do it under direct, conscious control.</p>

<p>Sitting in the theatre, I was zoning out to Spider Man or some other summer blockbuster. In my tuned-out state, my body was going all by itself.</p>

<p>Strange. Alien. And, as I later learned, a totally natural way to process new input, whether it&rsquo;s physical or mental.</p>

<p>Our nervous systems need time to process new information and integrate it. <strong>It turns out that this kind of integration is best done unconscously.</strong></p>

<p>In fact, I&rsquo;ve been experiencing less extreme examples too. Every time you get up, step away from the computer, and do a different activity, you give your unconscious mind a chance to catch up and process.</p>

<p>So, bathroom trips, conversations in the kitchen, a run down the stairs and out onto the street &mdash; all these activities, or <em>un-activities</em> create an opportunity for passive processing.</p>

<p>My goal is to keep up, as strange as it sounds, deliberate un-deliberate times to maximize learning and work, because the truth is, these things are circular &mdash; rest completes work &mdash; not linear.</p>

<p>I&rsquo;ve written about how this works from a Tai Chi perspective too, <a href="http://dankleiman.com/2013/04/23/practice-rhythms-at-tai-chi-immersion-week/">if you&rsquo;re curious to read more</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Launch Academy: Week 1 Reflections]]></title>
    <link href="http://dankleiman.github.io/blog/2014/05/17/launch-academy-week-1-reflections/"/>
    <updated>2014-05-17T09:32:59-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/05/17/launch-academy-week-1-reflections</id>
    <content type="html"><![CDATA[<p>So, all this week, I&rsquo;ve been experiencing the Tetris effect and I&rsquo;ve come to appreciate the beauty, and the painlessness, of learning how to break down a problem.</p>

<p>Let me explain&hellip;.</p>

<!-- more -->


<h2>The Tetris Effect</h2>

<p>According to <a href="http://www.scientificamerican.com/article/tetris-dreams/">the study from Harvard Medical School</a>, games like Tetris can reveal the way our brain integrates new information.</p>

<blockquote>In fact, the game Tetris has proved to be just that. Robert Stickgold and his colleagues at Harvard Medical School recently conducted a clever set of experiments in which they used the game to guide the content of people¿s dreams: among 17 subjects they trained to play Tetris, more than 60 percent reported dreaming of images associated with the game. </blockquote>


<p>I&rsquo;ve been having similar dreams about coding all week, especially as I&rsquo;m falling asleep.</p>

<p>In fact, I&rsquo;ve had to resist the urge to jump out of bed and grab my laptop to finish coding problems that plagued me during the day.</p>

<p>What&rsquo;s so cool is that my instructors at Launch Academy have been talking from the beginning about the way coding &mdash; and more generally the brain &mdash; works. They&rsquo;ve been extremely clear about the value of stepping away from the computer to actually find the solution.</p>

<p>I love being immersed in this environment where the answers to &ldquo;my work&rdquo; pour in at night, or on breaks, and more importantly, these down moments are treated as equally valuable as work time.</p>

<h2>Shoring Up Fundamentals</h2>

<p>All week, we&rsquo;ve been reviewing pre-work and solidifying our Ruby basics.</p>

<p>Specifically, here&rsquo;s what we&rsquo;ve been covering:</p>

<p><em>Ruby fundamentals
</em>Hashes, arrays, and compound data structures
<em>Iteration
</em>File IO</p>

<p>Launch Academy has some pretty cool custom tools to help us do this work. I&rsquo;m sure you&rsquo;ve seen things like CodeAcademy or RubyMonk.</p>

<p>At Launch Academy, we have internal tools that integrate shell commands to download, test, and submit practice problems. What I love about this is that not only are we honing our Ruby fundamentals, but we&rsquo;re integrating other skills, like command line basics, git, and a broader understanding of how to navigate the file system.</p>

<p>Next week, I think we&rsquo;re going to expand this work to include remote repositories.</p>

<p>Even though it&rsquo;s been a few days, it feels like it&rsquo;s been months of immersion and I can&rsquo;t wait to get back to work on Monday!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflections on Pre-Work: Balancing Theory and Practice]]></title>
    <link href="http://dankleiman.github.io/blog/2014/05/09/this-is-new-post/"/>
    <updated>2014-05-09T12:18:25-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/05/09/this-is-new-post</id>
    <content type="html"><![CDATA[<p>Preparing for <a href="http://www.launchacademy.com">Launch Academy</a>
while finishing up work as the director <a href="http://www.brooklinetaichi.org">Brookline Tai Chi</a> has been a massive exercise in balancing &ldquo;theory and practice.&rdquo;</p>

<p>This explanation from Practical Object-Oriented Design in Ruby by Sandi Metz perfectly captures the difference:</p>

<!-- more -->




<blockquote>What is the difference between theory and practice?
In theory, there is none. If theory were practice you could learn the rules of OOD, apply them consistently, and create perfect code from this day forward; your work here would be done.

However, no matter how deeply theory believes this to be true, practice knows better. Unlike theory, practice gets its hands dirty. It is practice that lays bricks, builds bridges, and writes code. Practice lives in the real world of change, confusion, and uncertainty.</blockquote>


<p>I&rsquo;ve been straddling the worlds of theory and practice for months now.</p>

<p><strong>Learning to Code <em>in Theory</em></strong></p>

<p>Every book, online tutorial, and exercise that I&rsquo;ve been working on, in Ruby, HTML, CSS, MySQL, has been carefully selected by the instructors at Launch Academy to lead us step-by-step through the basics.</p>

<p>The examples are clean.</p>

<p>Instructions are clear.</p>

<p>And when we get stuck, we can reach out for help and clarification.</p>

<p>It&rsquo;s a pleasure to live in this world</p>

<p><strong>Teaching Tai Chi <em>in Practice</em></strong></p>

<p>For the last ten years, I&rsquo;ve been teaching Tai Chi, working with students who are brand new to the practice or who are gradually building new skills.</p>

<p>Early on, I learned from my teaching mentor that you should only ever teach material that is well integrated into your own body, so that you can model it clearly, cleanly, and on demand.</p>

<p>The process of translating Tai Chi theory, embodied principles, and new concepts to something that students can absorb is an exercise in moving from the clean world of theory to the messy realm of practice.</p>

<p>How will they interpret a lesson?</p>

<p>What else are they thinking about when they come to class at night?</p>

<p>Is there something they&rsquo;d rather do with their time?</p>

<p>How do we handle layers of old injuries?</p>

<p>Being on the other side of the theory and practice dichotomy has its own rewards, <a href="http://dankleiman.com/about/">which I&rsquo;ve written about here</a>.</p>

<p>Right now, though, I&rsquo;m enjoying being in both worlds simultaneously. I can appreciate all the work the staff at Launch Academy has done to present us with clean, clear instructions.</p>

<p>I&rsquo;m also getting a little space from my own teaching, so I can appreciate the more abstract, theoretical questions of how, why, and what should be taught, unencumbered by a lot of practical constraints.</p>

<p><strong>Balancing Theory and Practice in the Future</strong></p>

<p>Going forward, months from now, when I&rsquo;m fully immersed in the world of web applications and my day-to-day will lean more to the &ldquo;practice&rdquo; end of the balance than the &ldquo;theory&rdquo; side, I hope I can remember this feeling of blending both worldviews.</p>

<p>By creating space to find a clean &ldquo;theory&rdquo; mindset, you really do get more energy to implement the realities of &ldquo;practice.&rdquo;</p>

<p>At the same time, the craftmanship of practice motivates you to explore and refine theory.</p>

<p>If I can find the right balance, work life will be even more rewarding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting a Feel for It]]></title>
    <link href="http://dankleiman.github.io/blog/2014/03/20/getting-a-feel-for-it/"/>
    <updated>2014-03-20T08:59:31-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/03/20/getting-a-feel-for-it</id>
    <content type="html"><![CDATA[<p>&ldquo;I just want to get a feel for what I can change/do&hellip;&rdquo;</p>

<p>Or</p>

<p>&ldquo;I just wanted to see what I could do&hellip;&rdquo;</p>

<p>In the middle of launching this blog, I wanted to change some of the core settings and I wasn&rsquo;t sure what could safely be changed without breaking the whole thing.</p>

<p>When I asked someone for help, I explained that I wanted to &ldquo;get a feel&rdquo; for what I could do without messing other things up.</p>

<!-- more -->


<h2>How Would You Have Phrased That?</h2>

<p>I didn&rsquo;t used to make a big distinction between these two ways of phrasing, but as I&rsquo;m reading <a href="http://pragprog.com/book/ahptl/pragmatic-thinking-and-learning">Pragmatic Thinking and Learning by Andy Hunt</a>, I&rsquo;m starting to become much more acutely aware of all these layers of filters, perspectives, and contexts that we each have for experiencing the world that influence what we see, say, and do.</p>

<p>For instance, what you value and how you communicate may be shaped by:
&ndash; your personality type, notably your degree of introversion or extroversion (I love thinking of this as &ldquo;how you recharge your batteries &mdash; from the inside or from other people&rdquo;)
&ndash; the generation you were born, even in the sense of how you see the role of institutions/companies that you interact with (need to read up on this more, but some people have theorized that there are only 4 generational archetypes that repeat over and over again, largely created and re-created in reference to the previous generation)
&ndash; the primary senses you use to take information in (often described in an educational context as learning style, i.e. visual, auditory, or kinesthetic)</p>

<h2>Starting to Notice Filters and Cues</h2>

<p>After reading the chapter on sensory filters, I spent the day trying to pick up on subtle language cues that people dropped as I talked to them.</p>

<p>Specificially, I was <a href="http://dankleiman.com">teaching Tai Chi lessons</a> that day, so once I heard a clear cue (&ldquo;I see what you&rsquo;re saying&hellip;&rdquo;), I tried to adapt the teaching to cater to that style.</p>

<p>My first attempt was too heavy-handed, though, and it just ended up confusing my student.</p>

<p>Fascinating to keep trying this approach, though!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learning More About Octopress]]></title>
    <link href="http://dankleiman.github.io/blog/2014/03/19/learning-more-about-octopress/"/>
    <updated>2014-03-19T18:46:22-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/03/19/learning-more-about-octopress</id>
    <content type="html"><![CDATA[<p>Just running through a test post again to go over the process and remind myself how this works!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Whoa! Octopress!]]></title>
    <link href="http://dankleiman.github.io/blog/2014/03/18/whoa-octopress/"/>
    <updated>2014-03-18T21:28:17-04:00</updated>
    <id>http://dankleiman.github.io/blog/2014/03/18/whoa-octopress</id>
    <content type="html"><![CDATA[<p>So, I just launched this new blog using Octopress.</p>

<p>Here are the steps I followed:</p>

<ul>
<li><a href="http://octopress.org/docs/setup/">Basics</a></li>
<li><a href="http://octopress.org/docs/blogging/">How to Blog</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">Deploying on Github</a></li>
</ul>


<p>I need to dig into the <a href="http://octopress.org/docs/configuring/">configuration stuff</a> a little more.</p>

<!-- more -->


<h2>Writing This Post in Markdown</h2>

<p>I&rsquo;m learning how to write this in <a href="http://http://daringfireball.net/projects/markdown/basics">Markdown</a> which is also pretty new to me. Right now it feels like a lazy version of html, so we&rsquo;ll see what&rsquo;s it like as I get used to it.</p>
]]></content>
  </entry>
  
</feed>
